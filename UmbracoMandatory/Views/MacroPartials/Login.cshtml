@inherits Umbraco.Web.Macros.PartialViewMacroPage


@using System.Web.Mvc.Html
@using ClientDependency.Core.Mvc
@using Umbraco.Web
@using Umbraco.Web.Models
@using Umbraco.Web.Controllers

@{
    var loginModel = new LoginModel();
    }

@if (!Members.GetCurrentLoginStatus().IsLoggedIn)
{
    using (Html.BeginUmbracoForm<UmbLoginController>
        ("HandleLogin"))
    {
<div class="col-lg-4">
        <h2 class="form-signin-heading">Login</h2>
			
        @Html.ValidationSummary("loginModel", true)

			
        <div class="form-group">
            @Html.LabelFor(m => loginModel.Username, new { @class = "control-label" })
            
                @Html.TextBoxFor(m => loginModel.Username, new
           {
               @class = "form-control",
               placeholder = "Username"
           })
                @Html.ValidationMessageFor(m => loginModel.Username)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => loginModel.Password, new { @class = "control-label" })
            
                @Html.PasswordFor(m => loginModel.Password, new
           {
               @class = "form-control",
               placeholder = "Password"
           })
                @Html.ValidationMessageFor(m => loginModel.Password)
            
        </div>
        <br />
                <button class="btn btn-lg btn-primary btn-block">Login</button>
					</div>
    }
}

else
{
	<h1>Logged in!</h1>
            <p>You are currently logged in as @Members.GetCurrentLoginStatus().Name</p>
            var logoutModel = new PostRedirectModel();
            logoutModel.RedirectUrl = "/";
            using (Html.BeginUmbracoForm<UmbLoginStatusController>
                ("HandleLogout"))
                {
                <button class="btn btn-primary input-medium pullleft">Logout</button>
                @Html.HiddenFor(m => logoutModel.RedirectUrl)
                }
                }
